<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:fieldinputservice="services.fieldinputservice.*"
		  width="100%" height="100%"
		  xmlns:fieldreportinputservice="services.fieldreportinputservice.*"
		  xmlns:fieldinfoserviceservice="services.fieldinfoserviceservice.*">
	<fx:Script>
		<![CDATA[

			import com.icd.fieldlogger.myHome.realtime.infomation.realtime_InfoModule;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import valueObjects.Allreport_input;
			
			
			private var t:Timer;
			private var urlReq:URLRequest;
			private var urlLdr:URLLoader;
			private var CurrentDateTime:Date = new Date();
			
			//creationComplete="creationCompleteHandler(event)"
			/* protected function creationCompleteHandler(event:FlexEvent):void{
				trace('start Timer');
				getField_inputByreportIDResult.token = fieldinputService.getField_inputByreportID(realtime_InfoModule.reportVO.reportID);
				getAllField_infoserviceSensorRealtimeResult.token = fieldinfoserviceService.getAllField_infoserviceSensorRealtime(realtime_InfoModule.reportVO.sID);
				t = new Timer(1000*5);
				t.addEventListener(TimerEvent.TIMER, updateTimer);
				urlReq = new URLRequest(realtime_InfoModule.urlSensor); // from database 
				urlLdr = new URLLoader();
				urlLdr.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);
				urlLdr.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
				urlLdr.addEventListener(Event.COMPLETE, doEventcomplete); 
			} */
			
			public function init():void {
				trace('start Timer');
				getField_inputByreportIDResult.token = fieldinputService.getField_inputByreportID(realtime_InfoModule.reportVO.reportID);
				getAllField_infoserviceSensorRealtimeResult.token = fieldinfoserviceService.getAllField_infoserviceSensorRealtime(realtime_InfoModule.reportVO.sID);
				t = new Timer(1000*5);
				t.addEventListener(TimerEvent.TIMER, updateTimer);
				urlReq = new URLRequest(realtime_InfoModule.urlSensor); // from database 
				urlLdr = new URLLoader();
				urlLdr.addEventListener(SecurityErrorEvent.SECURITY_ERROR, doEvent);
				urlLdr.addEventListener(IOErrorEvent.IO_ERROR, doEvent);
				urlLdr.addEventListener(Event.COMPLETE, doEventcomplete); 
			}
			
			[Bindable] private var arrDataList:ArrayCollection = new ArrayCollection();
			protected function getField_inputByreportIDResult_resultHandler(event:ResultEvent):void{
				arrDataList = event.result as ArrayCollection;
			}
			[Bindable] private var arrs:ArrayCollection = new ArrayCollection();
			protected function getAllField_infoserviceSensorRealtimeResult_resultHandler(event:ResultEvent):void{
				arrs = event.result as ArrayCollection;
			}
			
			private function updateTimer(evt:TimerEvent):void {
				urlLdr.load(urlReq);
			}
			
			protected function doEvent(event:Event):void{
				Alert.show('Error');
				lblstatus.text = t.running.toString();
			}
			
			protected function doEventcomplete(event:Event):void
			{
				//counter.appendText(CurrentDateTimeString() + '  =>' + event.target.data + '\n');					
				//var inp:Inputlog = new Inputlog();
				var arc:Array = String(event.target.data).split('|');
				
				trace(ObjectUtil.toString(arrs));
				var createInput:Allreport_input = new Allreport_input();
				
				createInput.inputID 	= "INP" + new Date().valueOf().toString();
				createInput.fieldID 	= realtime_InfoModule.reportVO.reportID;
				createInput.input_date 	= dtf.format(new Date());
				createInput.input_time 	= ttf.format(new Date());
				createInput.input_1 	= (arc[0])? arc[0]:'0.00';
				createInput.input_2 	= (arc[1])? arc[1]:'0.00';
				createInput.input_3 	= (arc[2])? arc[2]:'0.00';
				createInput.input_4 	= (arc[3])? arc[3]:'0.00';
				createInput.input_5 	= (arc[4])? arc[4]:'0.00';
				createInput.input_6 	= (arc[5])? arc[5]:'0.00';
				createInput.input_7 	= (arc[6])? arc[6]:'0.00';
				createInput.input_8 	= (arc[7])? arc[7]:'0.00';
				createInput.input_9 	= (arc[8])? arc[8]:'0.00';
				createInput.input_10 	= (arc[9])? arc[9]:'0.00';
				createInput.input_11 	= (arc[10])? arc[10]:'0.00';
				createInput.input_12	= (arc[11])? arc[11]:'0.00';
				createInput.input_13 	= (arc[12])? arc[12]:'0.00';
				createInput.input_14 	= (arc[13])? arc[13]:'0.00';
				createInput.input_15 	= (arc[14])? arc[14]:'0.00';
				createInput.input_16 	= (arc[15])? arc[15]:'0.00';
				createField_inputResult.token = fieldinputService.createField_input(createInput);
				lblstatus.text = t.running.toString();
				//trace(ObjectUtil.toString(createInput));
				arrDataList.addItemAt(createInput,0);
			}
			
			protected function linkbutton1_clickHandler(event:MouseEvent):void{
				/* var ttwdImport:importExcel = new importExcel();
				PopUpManager.addPopUp(ttwdImport, this, true);
				PopUpManager.centerPopUp(ttwdImport);
				ttwdImport.addEventListener(CloseEvent.CLOSE, alphaPopupCloseHandler); */
			}
			private function alphaPopupCloseHandler(e:CloseEvent):void{
				getField_inputByreportIDResult.token = fieldinputService.getField_inputByreportID(realtime_InfoModule.reportVO.reportID);
			}
			
			
			protected function lbtnRefresh_clickHandler(event:MouseEvent):void{
				getField_inputByreportIDResult.token = fieldinputService.getField_inputByreportID(realtime_InfoModule.reportVO.reportID);
			}
			
			
			public function start():void
			{
				trace('start');
				urlLdr.load(urlReq);
				if( t.running){
					t.stop();
					t.removeEventListener(TimerEvent.TIMER, updateTimer);
				}
				var i:int = 5*1000;  // 5 sec
				t = new Timer(i);
				t.addEventListener(TimerEvent.TIMER, updateTimer);
				t.start();
				lblstatus.text = t.running.toString();
			}
			
			public function stop():void
			{
				trace('stop');
				t.stop();
				lblstatus.text = t.running.toString();
			}
			
			
			protected function createField_inputResult_faultHandler(event:FaultEvent):void
			{
				stop();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:DateFormatter id="dtf" formatString="YYYY-MM-DD"/>
		<mx:DateFormatter id="ttf" formatString="LL:NN:SS"/>
		
		<fieldreportinputservice:FieldreportinputService id="fieldinputService"
														 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
														 showBusyCursor="true"/>
		<s:CallResponder id="getField_inputByreportIDResult" result="getField_inputByreportIDResult_resultHandler(event)"/>
		<s:CallResponder id="createField_inputResult" fault="createField_inputResult_faultHandler(event)"/>
		
		<fieldinfoserviceservice:FieldinfoserviceService id="fieldinfoserviceService"
														 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
														 showBusyCursor="true"/>
		<s:CallResponder id="getAllField_infoserviceSensorRealtimeResult" result="getAllField_infoserviceSensorRealtimeResult_resultHandler(event)"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:BorderContainer left="2" right="2" top="2" bottom="2" borderVisible="false">
		<s:Scroller left="0" right="0" top="0" bottom="0">
			<s:Group width="100%" height="100%" chromeColor="#FF9999" fontFamily="Arial" fontSize="10">
				<s:TextArea id="counter" width="100%" height="100%" text="" visible="false"/>
				<mx:DataGrid id="dgDataList" left="5" right="5" top="60" bottom="5" borderVisible="false"
							 chromeColor="#23AAE2" dataProvider="{arrDataList}" fontFamily="Arial" fontSize="10"
							 fontWeight="normal" variableRowHeight="true"
							 verticalGridLineColor="0xFFFFFF">
					<mx:columns>
						<!--<mx:DataGridColumn width="70" dataField="inputID" headerText="ID" textAlign="center"
						wordWrap="true" headerStyleName="centerBold"/>-->
						<mx:DataGridColumn width="70" dataField="input_date" headerText="Date" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="55" dataField="input_time" headerText="Time" editable="false" textAlign="center"
										   headerStyleName="centerBold" wordWrap="true"/>
						<mx:DataGridColumn width="65" dataField="input_1" headerText="Input-1" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_2" headerText="Input-2" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_3" headerText="Input-3" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_4" headerText="Input-4" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_5" headerText="Input-5" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_6" headerText="Input-6" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_7" headerText="Input-7" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_8" headerText="Input-8" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_9" headerText="Input-9" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_10" headerText="Input-10" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_11" headerText="Input-11" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_12" headerText="Input-12" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_13" headerText="Input-13" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_14" headerText="Input-14" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_15" headerText="Input-15" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
						<mx:DataGridColumn width="65" dataField="input_16" headerText="Input-16" textAlign="center"
										   wordWrap="true" headerStyleName="centerBold"/>
					</mx:columns>
				</mx:DataGrid>
				<s:HGroup left="10" top="35" height="20" gap="30">
					<s:Label height="20" fontWeight="normal" text="Project : {realtime_InfoModule.pjName}" textAlign="left"
							 verticalAlign="middle"/>
					<s:Label height="20" fontWeight="normal" text="Service : {realtime_InfoModule.svName}" textAlign="left"
							 verticalAlign="middle"/>
					<s:Label height="20" fontWeight="normal" text="Live Data : {realtime_InfoModule.urlSensor}" textAlign="left"
							 verticalAlign="middle"/>
					<mx:LinkButton id="lbtnRefresh" width="30" height="20"
								   click="lbtnRefresh_clickHandler(event)" color="#000000"
								   fontWeight="bold"
								   icon="@Embed(source='../images/refresh.png')" paddingLeft="5"
								   paddingRight="5" toolTip="Refresh"/>
					<s:Label text="" id="lblstatus"  />
				</s:HGroup>
				
				
				
				<s:HGroup right="5" top="5" height="25" color="#000000">
					<!--<mx:LinkButton width="70" height="25" label="Import" color="#000000" fontSize="10"
								   fontWeight="bold" icon="@Embed(source='../images/table_import.png')"
								   paddingLeft="5" paddingRight="5" toolTip="start synchronization"
								   click="linkbutton1_clickHandler(event)"/>
					<mx:LinkButton width="70" height="25" label="Export" color="#000000" fontSize="10"
								   fontWeight="bold" icon="@Embed(source='../images/table_export.png')"
								   paddingLeft="5" paddingRight="5" toolTip="start synchronization"/>-->
					<mx:LinkButton width="70" height="25" label="Print" color="#000000" fontSize="10"
								   fontWeight="bold" icon="@Embed(source='../images/printer.png')"
								   paddingLeft="5" paddingRight="5" toolTip="start synchronization"/>
				</s:HGroup>
				<s:Label x="10" top="3" height="20" fontSize="11" fontWeight="bold"
						 text="Data List" textAlign="left"
						 verticalAlign="middle"/>
				<mx:HRule left="10" top="25" width="120"/>
				
			</s:Group>
		</s:Scroller>
	</s:BorderContainer>	
	
</s:Module>
