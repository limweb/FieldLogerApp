<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:fieldinfotoollistservice="services.fieldinfotoollistservice.*"
			   xmlns:fieldinfosensorservice="services.fieldinfosensorservice.*"
			   width="600" height="450" backgroundColor="#23AAE2" borderVisible="false"
			   close="closeHandler(event)" fontSize="11" fontWeight="normal"
			   implements="icd.mgmtview.api.IManagementView" title="{titleName}">
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			
			import icd.mgmtview.api.constant.ManagementViewConst;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			import valueObjects.Allinfo_sensor;
			import valueObjects.Allinfo_toollist;

			
			[Bindable] private var MODE:int;
			[Bindable] private var titleName:String;
			[Bindable] private var checkSave:Boolean = true;
			[Bindable] public static var sensorVO:Allinfo_sensor = new Allinfo_sensor();
			
			public function onApplicationResize(event:Event):void{}
			protected function changeHandler():void{
				checkSave = false;
			}
			protected function closeHandler(event:CloseEvent):void{
				if(checkSave === true){
					PopUpManager.removePopUp(this);
				}else{
					Alert.show("Click Yes to save your changes", "Please confirm", Alert.YES | Alert.NO, this, AlertSaveClosed, null, Alert.YES);	
				}
			}
			protected function AlertSaveClosed(eventObj:CloseEvent):void {
				if(eventObj.detail==Alert.YES) {
					if(txtName.text !== "" && ddlType.selectedIndex !== -1 && cboUnit.textInput.text !== "" && txtGain_a.text !== "" && txtOffset_b.text !== ""){
						prepareSave();
					}if(txtName.text === ""){
						Alert.show('Please select "Name"','Fields with Asterisk (*)');
					}if(ddlType.selectedIndex === -1){
						Alert.show('Please select "Type"','Fields with Asterisk (*)');
					}if(cboUnit.textInput.text === ""){
						Alert.show('Please select "Unit"','Fields with Asterisk (*)');
					}if(txtGain_a.text === ""){
						Alert.show('Please Insert "Gain(a)"','Fields with Asterisk (*)');
					}if(txtOffset_b.text === ""){
						Alert.show('Please select "Offset(b)"','Fields with Asterisk (*)');
					}
				}else if(eventObj.detail===Alert.NO) {
					PopUpManager.removePopUp(this);
				}
			}
			
			public function prepareview(mode:int, titleName:String, objVO:Object=null):void{
				this.title = titleName;
				this.MODE = mode;
				if(this.MODE === ManagementViewConst.MODE_ADD){
					sensorVO							= new Allinfo_sensor();
					sensorVO.sensorID					= "SS" + new Date().valueOf().toString();
					sensorVO.sensor_gain_a				= "1";
					sensorVO.sensor_offset_b			= "0";
				}else if(this.MODE === ManagementViewConst.MODE_EDIT){
					sensorVO = objVO as Allinfo_sensor;
				}
				getAllsensor_unitResult.token = fieldinfosensorService.getAllsensor_unit();
			}
			
			protected function lbtnSave_clickHandler(event:MouseEvent):void{
				if(txtName.text !== "" && ddlType.selectedIndex !== -1 && cboUnit.textInput.text !== "" && txtGain_a.text !== "" && txtOffset_b.text !== ""){
					Alert.show('Please confirm!', 'Confirm Save', Alert.YES | Alert.NO, this, AlerSave, null, Alert.YES);
				}if(txtName.text === ""){
					Alert.show('Please select "Name"','Fields with Asterisk (*)');
				}if(ddlType.selectedIndex === -1){
					Alert.show('Please select "Type"','Fields with Asterisk (*)');
				}if(cboUnit.textInput.text === ""){
					Alert.show('Please select "Unit"','Fields with Asterisk (*)');
				}if(txtGain_a.text === ""){
					Alert.show('Please Insert "Gain(a)"','Fields with Asterisk (*)');
				}if(txtOffset_b.text === ""){
					Alert.show('Please select "Offset(b)"','Fields with Asterisk (*)');
				}
				
			}
			protected function AlerSave(eventObj:CloseEvent):void {
				if(eventObj.detail==Alert.YES) {
					prepareSave();
				}
			}
			protected function prepareSave():void{
				trace(sensorVO.toolID);
				var updateSensor:Allinfo_sensor 	= new Allinfo_sensor();
				updateSensor.sensorNo				= sensorVO.sensorNo;
				updateSensor.sensorID				= sensorVO.sensorID;
				updateSensor.toolID					= toolsListFormEdit.toolVO.toolID;
				updateSensor.sensor_name			= txtName.text;
				updateSensor.sensor_type  			= ddlType.selectedItem
				updateSensor.sensor_unit			= cboUnit.textInput.text;
				updateSensor.sensor_gain_a			= txtGain_a.text;
				updateSensor.sensor_offset_b		= txtOffset_b.text;
				updateSensor.sensor_min				= txtMin.text;
				updateSensor.sensor_max				= txtMax.text;
				updateSensor.sensor_note			= txtNote.text;
				if(this.MODE === ManagementViewConst.MODE_ADD){
					createField_infosensorResult.token = fieldinfosensorService.createField_infosensor(updateSensor);
				}else if(this.MODE === ManagementViewConst.MODE_EDIT){
					updateField_infosensorResult.token = fieldinfosensorService.updateField_infosensor(updateSensor);
				}
			}
			protected function infosensorResult_resultHandler(event:ResultEvent):void{
				checkSave = true;
				this.closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			}
		
			
		]]>
	</fx:Script>
	<fx:Declarations>
		
		<fieldinfosensorservice:FieldinfosensorService id="fieldinfosensorService"
													   fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
													   showBusyCursor="true"/>
		<s:CallResponder id="createField_infosensorResult" result="infosensorResult_resultHandler(event)"/>
		<s:CallResponder id="updateField_infosensorResult" result="infosensorResult_resultHandler(event)"/>
		<s:CallResponder id="getAllsensor_unitResult"/>
		
		
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:BorderContainer left="5" right="5" top="5" bottom="5" borderVisible="false"
					   cornerRadius="5">
		<s:HGroup top="40" horizontalCenter="0">
			<s:VGroup gap="20">
				<s:Label width="60" height="25" color="#FF0000" fontFamily="Arial" fontSize="10"
						 fontWeight="bold" text="* Name :" textAlign="right" verticalAlign="middle"/>
				<s:Label width="60" height="25" color="#FF0000" fontFamily="Arial" fontSize="10"
						 fontWeight="bold" text="* Type :" textAlign="right" verticalAlign="middle"/>
				<s:Label width="60" height="25" color="#FF0000" fontFamily="Arial" fontSize="10"
						 fontWeight="bold" text="* Unit :" textAlign="right" verticalAlign="middle"/>
				<s:Label width="60" height="25" color="#FF0000" fontFamily="Arial" fontSize="10"
						 fontWeight="bold" text="Gain (a) :" textAlign="right"
						 verticalAlign="middle"/>
				<s:Label width="60" height="25" color="#FF0000" fontFamily="Arial" fontSize="10"
						 fontWeight="bold" text="Offset (b) :" textAlign="right"
						 verticalAlign="middle"/>
				<s:Label width="60" height="25" fontFamily="Arial" fontSize="10" text="Min/Max :"
						 textAlign="right" verticalAlign="middle"/>
				<s:Label width="60" height="25" fontFamily="Arial" fontSize="10" text="Note :"
						 textAlign="right" verticalAlign="middle"/>
			</s:VGroup>
			<s:VGroup gap="20">
				<s:HGroup>
					<s:TextInput id="txtName" width="350" height="25" borderColor="#23AAE2"
								 borderVisible="true" change="changeHandler()" text="{sensorVO.sensor_name}"/>
				</s:HGroup>
				<s:DropDownList id="ddlType" width="350" height="25" change="changeHandler()" selectedItem="{sensorVO.sensor_type}"
								toolTip="Please select Type">
					<mx:ArrayCollection>
						<fx:String>4-20 mA</fx:String>
						<fx:String>0-20 mA</fx:String>
						<fx:String>0-30 V</fx:String>
						<fx:String>0-10 V</fx:String>
						<fx:String>0-5 V</fx:String>
						<fx:String>Pulse</fx:String>
						<fx:String>Counter</fx:String>
					</mx:ArrayCollection>
				</s:DropDownList>
				<s:ComboBox id="cboUnit" width="350" height="25" change="changeHandler()"
							labelField="sensor_unit" selectedItem="{sensorVO.sensor_unit}"
							toolTip="Please enter or select Unit">
					<s:AsyncListView list="{getAllsensor_unitResult.lastResult}"/>
				</s:ComboBox>
				<s:TextInput id="txtGain_a" width="350" height="25" borderColor="#23AAE2"
							 borderVisible="true" change="changeHandler()" text="{sensorVO.sensor_gain_a}"
							 restrict="0-9."/>
				<s:TextInput id="txtOffset_b" width="350" height="25" borderColor="#23AAE2"
							 borderVisible="true" change="changeHandler()" text="{sensorVO.sensor_offset_b}"
							 restrict="0-9."/>
				<s:HGroup gap="10">
					<s:TextInput id="txtMin" width="170" height="25" borderColor="#23AAE2" restrict="0-9."
								 borderVisible="true" change="changeHandler()" text="{sensorVO.sensor_min}"/>
					<s:TextInput id="txtMax" width="170" height="25" borderColor="#23AAE2"
								 borderVisible="true" change="changeHandler()" text="{sensorVO.sensor_max}"/>
				</s:HGroup>
				<s:TextArea id="txtNote" width="350" height="70" borderColor="#23AAE2" restrict="0-9."
							borderVisible="true"  change="changeHandler()" text="{sensorVO.sensor_note}"/>
			</s:VGroup>
			
		</s:HGroup>
		<mx:LinkButton id="lbtnSave" right="10" top="5" width="35" height="20"
					   click="lbtnSave_clickHandler(event)" color="#000000"
					   enabled="{checkSave === false}" focusColor="#70B2EE" fontWeight="bold"
					   icon="@Embed(source='../images/save_before.png')" paddingLeft="0"
					   paddingRight="0" toolTip="Click to Save"/>
		<mx:LinkButton id="lbtnSaved" visible="{checkSave === true}" right="10" top="5" width="35"
					   height="20" color="#000000" focusColor="#A2CBEA" fontSize="11"
					   fontWeight="bold" icon="@Embed(source='../images/save_after.png')"
					   paddingLeft="5" paddingRight="5" rollOverColor="#A2CBEA"
					   selectionColor="#A2CBEA" toolTip="Saved"/>		<s:Label left="10" top="5"
																				 height="20"
																				 fontSize="11"
																				 fontStyle="italic"
																				 fontWeight="bold"
																				 text="Sensor Infomation"
																				 textAlign="left"
																				 verticalAlign="middle"/>
		<mx:HRule left="10" top="27" width="130"/>
	</s:BorderContainer>
</s:TitleWindow>
